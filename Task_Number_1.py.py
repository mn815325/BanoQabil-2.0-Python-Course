# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hub_tN5obFQARx6Mms3ZkC5tzJM1_s_1
"""

# Author: [NAVEED]
# Roll Number: [63489]
# Email: [mn825325@gmail.com]

#Task number 1: Even or Odd Checker:
#Question: Write a Python program that takes an integer input from the user and checks if it's even or odd. Display an appropriate message.
#Answer:
# Take an integer input from the user
user_input = input("Enter an integer: ")

# Check if the input is a valid integer
try:
    number = int(user_input)
except ValueError:
    print("Invalid input. Please enter a valid integer.")
    exit()

# Check if the number is even or odd
if number % 2 == 0:
    print(f"{number} is an even number.")
else:
    print(f"{number} is an odd number.")

#Task number 2: Multiplication Table Generator:
#Question: Create a program that generates a multiplication table for a given number. Allow the user to input the number and display the table.
#Answer:
# Take an integer input from the user
user_input = input("Enter a number: ")

# Check if the input is a valid integer
try:
    number = int(user_input)
except ValueError:
    print("Invalid input. Please enter a valid integer.")
    exit()

# Display the multiplication table for the entered number
print(f"Multiplication Table for {number}:")

for i in range(1, 11):
    result = number * i
    print(f"{number} x {i} = {result}")

#Task number 3: Factorial Calculator:
#Question: Write a Python program that calculates the factorial of a given number. Use a loop to perform the calculation.
#Answer:
# Take an integer input from the user
user_input = input("Enter a number: ")

# Check if the input is a valid integer
try:
    number = int(user_input)
except ValueError:
    print("Invalid input. Please enter a valid integer.")
    exit()

# Calculate the factorial of the entered number
factorial = 1

if number < 0:
    print("Factorial is not defined for negative numbers.")
elif number == 0:
    print("The factorial of 0 is 1.")
else:
    for i in range(1, number + 1):
        factorial *= i

    print(f"The factorial of {number} is {factorial}")

#Task number 4: Sum of Digits:
#Question: Create a program that calculates the sum of the digits of a given number. For example, if the input is 12345, the output should be 15.
#Answer:
# Take an integer input from the user
user_input = input("Enter a number: ")

# Check if the input is a valid integer
try:
    number = int(user_input)
except ValueError:
    print("Invalid input. Please enter a valid integer.")
    exit()

# Calculate the sum of the digits
num_str = str(abs(number))  # Convert to a string and take absolute value
digit_sum = sum(map(int, num_str))

# Display the result
print(f"The sum of the digits of {number} is {digit_sum}")

#Task number 5: FizzBuzz Game:
#Question: Implement the FizzBuzz game in Python. Write a program that prints the numbers from 1 to 100. For multiples of 3, print "Fizz," for multiples of 5, print "Buzz," and for multiples of both 3 and 5, print "FizzBuzz."
#Answer:
for num in range(1, 41):
    if num % 3 == 0 and num % 5 == 0:
        print("FizzBuzz")
    elif num % 3 == 0:
        print("Fizz")
    elif num % 5 == 0:
        print("Buzz")
    else:
        print(num)

#Task number 6: Palindrome Checker:
#Question: Develop a Python program that checks if a given word or phrase is a palindrome (reads the same forwards and backwards).
#Answer:
def is_palindrome(word):
    # Remove spaces and convert to lowercase for case-insensitive comparison
    cleaned_word = ''.join(word.split()).lower()

    # Check if the cleaned word is equal to its reverse
    return cleaned_word == cleaned_word[::-1]

# Take a word or phrase input from the user
user_input = input("Enter a word or phrase: ")

# Check if the input is a palindrome
if is_palindrome(user_input):
    print(f"{user_input} is a palindrome.")
else:
    print(f"{user_input} is not a palindrome.")

#Task number 7: Prime Number Checker:
#Question: Write a program that checks if a given number is prime or not. Display an appropriate message.
#Answer:
def is_prime(number):
    # Check if the number is less than 2
    if number < 2:
        return False

    # Check for factors from 2 to the square root of the number
    for i in range(2, int(number**0.5) + 1):
        if number % i == 0:
            return False  # It has a factor other than 1 and itself

    return True  # It is a prime number

# Take an integer input from the user
user_input = input("Enter an integer: ")

# Check if the input is a valid integer
try:
    number = int(user_input)
except ValueError:
    print("Invalid input. Please enter a valid integer.")
    exit()

# Check if the number is prime
if is_prime(number):
    print(f"{number} is a prime number.")
else:
    print(f"{number} is not a prime number.")

#Task number 8: Guess the Word Game:
#Question: Create a word guessing game where the computer selects a random word from a predefined list, and the player has to guess the word one letter at a time.
#Answer:
import random

def choose_random_word():
    word_list = ["python", "java", "programming", "computer", "algorithm", "coding"]
    return random.choice(word_list)

def display_word(word, guessed_letters):
    display = ""
    for letter in word:
        if letter in guessed_letters:
            display += letter
        else:
            display += "_"
    return display

def main():
    print("Welcome to the Word Guessing Game!")
    selected_word = choose_random_word()
    guessed_letters = []
    attempts = 6

    while attempts > 0:
        current_display = display_word(selected_word, guessed_letters)
        print(f"\nCurrent Word: {current_display}")
        print(f"Attempts left: {attempts}")

        guess = input("Guess a letter: ").lower()

        if len(guess) == 1 and guess.isalpha():
            if guess in guessed_letters:
                print("You already guessed that letter. Try again.")
            elif guess in selected_word:
                print("Correct guess!")
                guessed_letters.append(guess)
            else:
                print("Incorrect guess. Try again.")
                attempts -= 1
        else:
            print("Invalid input. Please enter a single letter.")

        if set(guessed_letters) == set(selected_word):
            print("\nCongratulations! You guessed the word:", selected_word)
            break

    if attempts == 0:
        print("\nSorry, you ran out of attempts. The correct word was:", selected_word)

if __name__ == "__main__":
    main()

55